# Project information
site_name: 'Deep Learning Wizard'
site_description: 'We try to make learning deep learning, deep bayesian learning, and deep reinforcement learning math and code easier. Used by thousands.'
site_author: 'Ritchie Ng'
site_url: 'https://www.deeplearningwizard.com/'

# Navigation
nav:
    - Home: index.md
    - About:
      - Intro: home.md
      - About Us: about.md
      - Reviews: review.md
      # - AI Pipeline: pipeline.md
      - Consultancy: consultancy.md
    - Deep Learning:
      - Introduction: deep_learning/intro.md
      - Course Progression: deep_learning/course_progression.md
      - Practical Deep Learning with PyTorch:
        - Matrices: deep_learning/practical_pytorch/pytorch_matrices.md
        - Gradients: deep_learning/practical_pytorch/pytorch_gradients.md
        - Linear Regression: deep_learning/practical_pytorch/pytorch_linear_regression.md
        - Logistic Regression: deep_learning/practical_pytorch/pytorch_logistic_regression.md
        - Feedforward Neural Networks (FNN): deep_learning/practical_pytorch/pytorch_feedforward_neuralnetwork.md
        - Convolutional Neural Networks (CNN): deep_learning/practical_pytorch/pytorch_convolutional_neuralnetwork.md
        - Recurrent Neural Networks (RNN): deep_learning/practical_pytorch/pytorch_recurrent_neuralnetwork.md
        - Long Short Term Memory Neural Networks (LSTM): deep_learning/practical_pytorch/pytorch_lstm_neuralnetwork.md
        - Autoencoders (AE): deep_learning/practical_pytorch/pytorch_autoencoder.md
        - Fully-connected Overcomplete Autoencoder (AE): deep_learning/practical_pytorch/pytorch_fc_overcomplete_ae.md
        # - Fully-connected Undercomplete Autoencoder (AE): deep_learning/practical_pytorch/pytorch_fc_undercomplete_ae.md
        # - Convolutional Overcomplete Variational Autoencoder (VAE): deep_learning/practical_pytorch/pytorch_autoencoder.md
        # - Convolutional Overcomplete Adversarial Autoencoder (AAE): deep_learning/practical_pytorch/pytorch_autoencoder.md
        # - Generative Adversarial Networks (GAN): deep_learning/practical_pytorch/pytorch_autoencoder.md
      - Improving Deep Learning with PyTorch:
        - Derivative, Gradient and Jacobian: deep_learning/boosting_models_pytorch/derivative_gradient_jacobian.md
        - Forward- and Backward-propagation and Gradient Descent (From Scratch FNN Regression): deep_learning/boosting_models_pytorch/forwardpropagation_backpropagation_gradientdescent.md
        - Learning Rate Scheduling: deep_learning/boosting_models_pytorch/lr_scheduling.md
        - Optimization Algorithms: deep_learning/boosting_models_pytorch/optimizers.md
        - Weight Initialization and Activation Functions: deep_learning/boosting_models_pytorch/weight_initialization_activation_functions.md
      - Deep Reinforcement Learning with PyTorch:
        - Supervised Learning to Reinforcement Learning (RL): deep_learning/deep_reinforcement_learning_pytorch/supervised_to_rl.md
        - Markov Decision Processes (MDP) and Bellman Equations: deep_learning/deep_reinforcement_learning_pytorch/bellman_mdp.md
        - Dynamic Programming: deep_learning/deep_reinforcement_learning_pytorch/dynamic_programming_frozenlake.md
      - From Scratch Deep Learning with Python/PyTorch:
        - From Scratch Logistic Regression Classification: deep_learning/fromscratch/fromscratch_logistic_regression.md
        # - From Scratch CNN Classification: deep_learning/fromscratch/fromscratch_cnn.md
        # - From Scratch RNN Classification: deep_learning/fromscratch/fromscratch_rnn_classification.md
        # - From Scratch LSTM Classification: deep_learning/fromscratch/fromscratch_lstm_classification.md
        # - From Scratch AE: deep_learning/fromscratch/fromscratch_ae_classification.md
      # - Large Language Models with PyTorch:
        # - Introduction
        # - What is Temperature
      - Compute Optimization:
        - Speed Optimization Basics Numba: deep_learning/production_pytorch/speed_optimization_basics_numba.md
      # - Additional Readings: deep_learning/readings.md
    - Language Model:
      - Introduction: language_model/intro.md
      - Containers: 
        - HPC Containers with Apptainer: language_model/containers/hpc_containers_apptainer.md
      - LLMs:
        - LLMs Introduction and Hyperparameter Tuning: language_model/llm/llm_intro_hyperparameter_tuning.md
      - MMLMs:
        - MMLMs Introduction: language_model/mmlm/mmlm_intro.md
      # - RAG:
    - Machine Learning:
      - Introduction: machine_learning/intro.md
      - RAPIDS cuDF:
        - GPU DataFrames: machine_learning/gpu/rapids_cudf.md
        - GPU/CPU Fractional Differencing: machine_learning/gpu/gpu_fractional_differencing.md
    #  - Linear Regression: machine_learning/gpu/rapids_cudf.md
    #  - Ridge Regression: machine_learning/gpu/rapids_cudf.md
    #  - Kalman Filter: machine_learning/gpu/rapids_cudf.md
    #  - Stochastic Gradient Descent: machine_learning/gpu/rapids_cudf.md
    #  - K-nearest Neighbours Classification: machine_learning/gpu/rapids_cudf.md
    #  - K-Means Clustering: machine_learning/gpu/rapids_cudf.md
    #  - Density-Based Spatial Clustering of Applications with Noise (DBSCAN): machine_learning/gpu/rapids_cudf.md
    #  - Singular Value Decomposition (SVD), Dimensionality Reduction: machine_learning/gpu/rapids_cudf.md
    #  - Principal Component Analysis (PCA), Dimensionality Reduction: machine_learning/gpu/rapids_cudf.md
    #  - Uniform Manifold Approximation and Projection (UMAP), Dimensionality Reduction: machine_learning/gpu/rapids_cudf.md

    - Programming:
      - Introduction: programming/intro.md
      - C++: programming/cpp/cpp.md
      - Bash: programming/bash/bash.md
      - Python: programming/python/python.md
      - R: programming/r/r.md
      - Javascript: programming/javascript/javascript.md
      - Electron: programming/electron/electron.md
      - Sympy: programming/sympy/calculus_sympy.md
      - NumPy and CuPy: programming/numpycupy/linalg_numpy_cupy.md
    #  - Matplotlib: programming/plotting/matplotlib.md

    # - Plotting:
    #   - Introduction: programming/plotting/intro.md

    # - Out of Distribution Data:
    #   - Introduction: ood/intro.md

    - Data Engineering:
      - Cassandra (NoSQL):
        - Introduction: data_engineering/nosql/cassandra/intro.md
        - Cassandra Cluster Setup: data_engineering/nosql/cassandra/setting_up_cluster.md

    - Blog:
      - blog/index.md

# Configuration
theme:
  name: material
  custom_dir: material/overrides
  
  static_templates:
    - 404.html

  # Don't include MkDocs' JavaScript
  include_search_page: false
  search_index_only: true
  
  # Default values, taken from mkdocs_theme.yml
  language: en
  features:
    - content.code.annotate
    - content.tabs.link
    - content.code.copy
    - content.action.edit
    - content.action.view
    - navigation.sections
    - navigation.tabs
    - navigation.footer
    - navigation.top
    - navigation.tracking
    - search.highlight
    - search.share
    - search.suggest
  palette:
    - scheme: default
      primary: indigo
      accent: indigo
      toggle:
        icon: material/toggle-switch-off-outline
        name: Switch to dark mode
    - scheme: slate
      primary: indigo
      accent: indigo
      toggle:
        icon: material/toggle-switch
        name: Switch to light mode
  font:
    text: Roboto
    code: Roboto Mono
  favicon: ./docs/assets/favicon.ico
  icon:
    logo: fontawesome/regular/chart-bar

# Extensions
markdown_extensions:
  - admonition
  - abbr
  - attr_list
  - def_list
  - footnotes
  - meta
  - md_in_html
  - toc:
      permalink: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.highlight
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.magiclink:
      repo_url_shorthand: true
      user: squidfunk
      repo: mkdocs-material
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: false
      combine_header_slug: true
      slugify: !!python/object/apply:pymdownx.slugs.slugify
        kwds:
          case: lower
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde

# Social
extra:
  analytics:
    provider: google
    property: 'UA-122083328-1'
  social:
    - icon: 'fontawesome/brands/youtube'
      link: 'https://www.youtube.com/channel/UCJz2MIjiCosOQCwhnsYxeEw'
    - icon: 'fontawesome/brands/twitter'
      link: 'https://twitter.com/deeplearningwiz'
    - icon: 'fontawesome/brands/facebook'
      link: 'https://www.facebook.com/DeepLearningWizard/'
    - icon: 'fontawesome/brands/linkedin'
      link: 'https://www.linkedin.com/company/deeplearningwizard/'
    - icon: 'fontawesome/brands/github'
      link: 'https://github.com/ritchieng'

# Search
plugins:
  - blog
  - search:
      separator: '[\s\u200b\-_,:!=\[\]()"`/]+|\.(?!\d)|&[lg]t;|(?!\b)(?=[A-Z][a-z])'

# For mathjax rendering
extra_javascript:
  - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

# Source to repository
repo_name: ritchieng/deep-learning-wizard
repo_url: https://github.com/ritchieng/deep-learning-wizard

# Copyright
copyright: 'Copyright &copy; 2018-2024 Deep Learning Wizard by Ritchie Ng'
